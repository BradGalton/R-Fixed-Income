####################################################################################################
#Nelson-Siegel optimization
####################################################################################################
rm(list=ls())
library(DEoptim)
####################################################################################################
####################################################################################################
NelsonSiegel<-function(theta0,theta1,theta2,lambda,days,days.year){
  r<-theta0+(theta1+theta2)*(1-exp(-days/(days.year*lambda)))/(days/(days.year*lambda))-theta2*exp(-days/(days.year*lambda))
}

####################################################################################################
####################################################################################################
# NelsonSiegelObjective<-function(z,n,data,data.coup,data.last,days.year,price.mkt){
NelsonSiegelObjective<-function(z,dat){
  #unpack decision variables from "z" input
  theta0<-z[1]
  theta1<-z[2]
  theta2<-z[3]
  lambda<-z[4]
  data<-dat[[1]]
  #unpack data inputs from the list "dat"
  data.coup<-dat[[2]]
  data.last<-dat[[3]]
  days.year<-dat[[4]]
  price.mkt<-dat[[5]]
  date.init<-dat[[6]]
  n<-dat[[7]]
  price<-rep(0,n)
  #initialize objective value at 0
  J<-0
  
  for(i in 1:n){
    A<-0
    j<-1
    days<-as.numeric(as.Date(data.coup[i,j])-date.init)
    r<-NelsonSiegel(theta0,theta1,theta2,lambda,days,days.year)
    A<-A+(data[i,2]/2+100)*exp(-r*days/days.year)
    j<-j+1
    while(is.na(data.coup[i,j])==FALSE){
      days<-as.numeric(as.Date(data.coup[i,j])-date.init)
      r<-NelsonSiegel(theta0,theta1,theta2,lambda,days,days.year)
      A<-A+(data[i,2]/2)*exp(-r*days/days.year)
      j<-j+1
    }
    days<-as.numeric(date.init-as.Date(data.last[i]))
    days.tot<-as.numeric(as.Date(data.coup[i,j-1])-as.Date(data.last[i]))
    price[i]<-A
    J<-J+(price[i]-price.mkt[i])^2
  }
  f<-J
}
####################################################################################################
####################################################################################################
date.init<-as.Date("2013-12-31")
dir1<-"C:/Users/Brad/Documents/R"                                     #Verify local directory
data <- read.table(paste0(dir1,"/bond_quotes_hw.txt"),header=TRUE)
data[,1]<-as.character(data[,1])
v<-paste(substring(data[,1],1,4),"-",substring(data[,1],5,6),"-",substring(data[,1],7,8),sep = "")
head(v)
data[,1]<-as.Date(v)
n.bonds<-length(data[,1])
data.coup<-matrix(NA,nrow =n.bonds,ncol=20)
data.last<-rep(NA,n.bonds)

####################################################################################################
####################################################################################################
# get coupon payment dates for all the bonds
for(i in 1:n.bonds){
  max.per<-25
  test<-seq(from=data[i,1],by="-6 months",length.out=max.per)
  year<-as.numeric(substring(test,1,4))
  temp<-year[1]
  j<-1
  while(temp>2013){
    data.coup[i,j]<-as.character(test[j])
    j<-j+1
    temp<-year[j]
  }
  data.last[i]<-as.character(test[j])
} 

####################################################################################################
####################################################################################################
n<-length(data.last)
days.year<-365
price<-rep(0,n.bonds)
#use mid-market for quoted price
price.mkt<-0.5*(data[,3]+data[,4])

# get accrued interest and compute invoice prices
for(i in 1:n.bonds){
  j<-1
  days<-as.numeric(as.Date(data.coup[i,j])-date.init)
  j<-j+1
  while(is.na(data.coup[i,j])==FALSE){
    days<-as.numeric(as.Date(data.coup[i,j])-date.init)
    j<-j+1
  }
  days<-as.numeric(date.init-as.Date(data.last[i]))
  days.tot<-as.numeric(as.Date(data.coup[i,j-1])-as.Date(data.last[i]))
  price.mkt[i]<-(data[i,2]/2)*days/days.tot+price.mkt[i]
}

#generate a list for input into the objective function
dat<-list(data=data,data.coup=data.coup,data.last=data.last,days.year=days.year,price.mkt=price.mkt,date.init=date.init,n=n)
####################################################################################################
####################################################################################################
par.0<-c(0.075442,-0.045540,0,3.224602)
(par.0<-c(0.06,-0.06,-0.01,1))
output<-optim(par=par.0,fn=NelsonSiegelObjective,dat=dat,gr = NULL,method = c("Nelder-Mead"),hessian = FALSE)
(temp<-output$par)
(f.objective<-output$value)
theta0<-temp[1]
theta1<-temp[2]
theta2<-temp[3]
lambda<-temp[4]

# price all the bonds and compare to the invoice price (quoted price+accrued interest)
for(i in 1:n.bonds){
  A<-0
  j<-1
  days<-as.numeric(as.Date(data.coup[i,j])-date.init)
  r<-NelsonSiegel(theta0,theta1,theta2,lambda,days,days.year)
  A<-A+(data[i,2]/2+100)*exp(-r*days/days.year)
  j<-j+1
  while(is.na(data.coup[i,j])==FALSE){
    days<-as.numeric(as.Date(data.coup[i,j])-date.init)
    r<-NelsonSiegel(theta0,theta1,theta2,lambda,days,days.year)
    A<-A+(data[i,2]/2)*exp(-r*days/days.year)
    j<-j+1
  }
  days<-as.numeric(date.init-as.Date(data.last[i]))
  days.tot<-as.numeric(as.Date(data.coup[i,j-1])-as.Date(data.last[i]))
  price[i]<-A
}

mat<-as.numeric(as.Date(data.coup[,1])-date.init)/days.year

####################################################################################################
####################################################################################################
plot(mat[1:n.bonds],price.mkt[1:n.bonds],xlab="maturity(years)",ylab="Invoice Prices",pch=8,ylim=c(min(min(price.mkt[1:n.bonds]),min(price[1:n.bonds])),max(max(price.mkt[1:n.bonds]),max(price[1:n.bonds]))))
points(mat[1:n.bonds],price[1:n.bonds],pch=5)
legend("topleft",c("market mid price","Nelson-Siegel"),pch=c(8,5))

####################################################################################################
####################################################################################################
T<-seq(from=1,to=5*365,by=1)
r<-NelsonSiegel(theta0,theta1,theta2,lambda,T,days.year)
plot(T/365,r,type="l",xlab="maturity(years)",ylab="spot rate")
title(main="Continuously compounded spot rate as \n a function of maturity")

####################################################################################################
####################################################################################################
DF<-exp(-r*T/365)
plot(T/365,DF,type="l",xlab="maturity(years)",ylab="discount factor")
title(main="Discount factor as \n a function of maturity")

####################################################################################################
####################################################################################################
# Using DEoptim instead of optim
par.L<-c(0,-0.1,-0.1,0)
par.U<-c(0.2,0.1,0.1,6)
output<-DEoptim(fn=NelsonSiegelObjective, lower=par.L, upper=par.U,dat=dat, DEoptim.control(NP = 40,itermax = 150, F = 0.8, CR = 0.9))
